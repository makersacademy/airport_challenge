# Airport Challenge

The software aim to control the flow of planes at an airport. 
The planes can land and take off provided that the weather is sunny. Occasionally it may be stormy, in which case no planes can land or take off.

## Motivation

* Be able to code using TDD
* Write meaningful tests
* Learn how to structure new Ruby projects
* Turning requirements into working code
* Debugging techniques

## Approach

The approach consist in the following action in oder:

* Defaining a domain model from the user's stories.
* 1st requirement - TDD Airport class
* 2nd requirement - TDD Airplane class
* 3rd requirement - TDD Instruct a plane to land
* 4th requirement - TDD Instruct a plane to take_off
* 5th requirement - TDD Prevent takre off if the weather is stormy 
* 6th requirement - TDD Prevent land if the weather is stormy
* 7th requirement - TDD Prevent landing if airport is full
* 8th requirement - TDD Overridable airport capacity
* 9th requirement - TDD edge cases to prevent inconsistent states of the system


## How to use the software

Plaese see below a simple example on how the software runs:

## Feature test

```
MAKERSs-MBP-5:airport_challenge student$ irb
2.5.0 :001 > require './lib/airport.rb'
 => true 
2.5.0 :002 > airport = Airport.new
 => #<Airport:0x00007fd74700b948 @weather=:sunny, @capacity=5, @hangar=[]> 
2.5.0 :003 > airplane1 = Airplane.new
 => #<Airplane:0x00007fd7459f9858> 
2.5.0 :004 > airport.land(airplane1)
 => [#<Airplane:0x00007fd7459f9858>] 
2.5.0 :005 > airport.land(airplane1)
Traceback (most recent call last):
        3: from /Users/student/.rvm/rubies/ruby-2.5.0/bin/irb:11:in `<main>'
        2: from (irb):5
        1: from /Users/student/Desktop/Desktop/projects/Week1/Weekend_1/airport_challenge/lib/airport.rb:20:in `land'
RuntimeError (The airplane has already landed)
2.5.0 :006 > airplane2 = Airplane.new
 => #<Airplane:0x00007fd74502ba10> 
2.5.0 :007 > airport.land(airplane2)
Traceback (most recent call last):
        3: from /Users/student/.rvm/rubies/ruby-2.5.0/bin/irb:11:in `<main>'
        2: from (irb):7
        1: from /Users/student/Desktop/Desktop/projects/Week1/Weekend_1/airport_challenge/lib/airport.rb:16:in `land'
RuntimeError (The weather is stormy)
2.5.0 :008 > airport.land(airplane2)
Traceback (most recent call last):
        3: from /Users/student/.rvm/rubies/ruby-2.5.0/bin/irb:11:in `<main>'
        2: from (irb):8
        1: from /Users/student/Desktop/Desktop/projects/Week1/Weekend_1/airport_challenge/lib/airport.rb:16:in `land'
RuntimeError (The weather is stormy)
2.5.0 :009 > airport.land(airplane2)
 => [#<Airplane:0x00007fd7459f9858>, #<Airplane:0x00007fd74502ba10>] 
2.5.0 :010 > airport.take_off(airplane1)
 => "The airplane #<Airplane:0x00007fd7459f9858> has taken off" 
2.5.0 :011 > airport.take_off(airplane1)
Traceback (most recent call last):
        3: from /Users/student/.rvm/rubies/ruby-2.5.0/bin/irb:11:in `<main>'
        2: from (irb):11
        1: from /Users/student/Desktop/Desktop/projects/Week1/Weekend_1/airport_challenge/lib/airport.rb:27:in `take_off'
RuntimeError (The weather is stormy)
2.5.0 :012 > airport.take_off(airplane1)
Traceback (most recent call last):
        3: from /Users/student/.rvm/rubies/ruby-2.5.0/bin/irb:11:in `<main>'
        2: from (irb):12
        1: from /Users/student/Desktop/Desktop/projects/Week1/Weekend_1/airport_challenge/lib/airport.rb:29:in `take_off'
RuntimeError (The airplane is not in the airport)
2.5.0 :013 > airport
 => #<Airport:0x00007fd74700b948 @weather=:sunny, @capacity=5, @hangar=[#<Airplane:0x00007fd74502ba10>]> 
2.5.0 :014 > airport.take_off(airplane2)
 => "The airplane #<Airplane:0x00007fd74502ba10> has taken off" 
2.5.0 :015 > airport
 => #<Airport:0x00007fd74700b948 @weather=:sunny, @capacity=5, @hangar=[]> 
2.5.0 :016 > exit

```
