plane - instruct to land
Plane - instruct to take off - confirm it is not at aiport
airport - have capacity, be full
airport - default capacity that can be overridden
airport - no take-offs permitted when weather is stormy
airport - no landings when weather is stormy

Your code should defend against edge cases such as 
inconsistent states of the system ensuring that 
planes can only take off from airports they are in; 
planes that are already flying cannot take off and/or 
be in an airport; planes that are landed cannot land 
again and must be in an airport, etc.

Your task is to test drive the creation of a set of 
classes/modules to satisfy all the above user stories. 
You will need to use a random number generator to set 
the weather (it is normally sunny but on rare occasions 
it may be stormy). In your tests, you'll need to use a stub 
to override random weather to ensure consistent test behaviour.

As an air traffic controller 
So I can get passengers to a destination 
I want to instruct a plane to land at an airport

plane - instruct to land

As an air traffic controller 
So I can get passengers on the way to their destination 
I want to instruct a plane to take off from an airport and confirm that it is no longer in the airport

Plane - instruct to take off - confirm it is not at aiport

As an air traffic controller 
To ensure safety 
I want to prevent landing when the airport is full 

airport - have capacity, be full

As the system designer
So that the software can be used for many different airports
I would like a default airport capacity that can be overridden as appropriate

airport - default capacity that can be overridden

As an air traffic controller 
To ensure safety 
I want to prevent takeoff when weather is stormy 

airport - no take-offs permitted when weather is stormy

As an air traffic controller 
To ensure safety 
I want to prevent landing when weather is stormy 

airport - no landings when weather is stormy